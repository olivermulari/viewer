webpackHotUpdate_N_E("pages/[name]",{

/***/ "./maze/Grid.js":
/*!**********************!*\
  !*** ./maze/Grid.js ***!
  \**********************/
/*! exports provided: Grid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Grid\", function() { return Grid; });\n/* harmony import */ var _Users_olivermulari_Documents_dev_hobbies_viewer_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _Users_olivermulari_Documents_dev_hobbies_viewer_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var valo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! valo.js */ \"../valo.js/build/valo.js\");\n/* harmony import */ var valo_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(valo_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var valo_js_src_valo2D_utils_mobile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! valo.js/src/valo2D/utils/mobile */ \"../valo.js/src/valo2D/utils/mobile.js\");\n/* harmony import */ var _mazegenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mazegenerator */ \"./maze/mazegenerator.js\");\n/* harmony import */ var _pathfinding__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pathfinding */ \"./maze/pathfinding.js\");\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./presets */ \"./maze/presets.js\");\n\n\n\n\n\n\n\nvar Grid = /*#__PURE__*/function () {\n  function Grid(app, options) {\n    Object(_Users_olivermulari_Documents_dev_hobbies_viewer_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Grid);\n\n    this.app = app;\n    this.options = Object.assign(Object(_presets__WEBPACK_IMPORTED_MODULE_6__[\"presets\"])(options.preset || \"Basic\"), options); // mobile test\n\n    this.isMobile = Object(valo_js_src_valo2D_utils_mobile__WEBPACK_IMPORTED_MODULE_3__[\"isMobile\"])(); // for maze\n\n    this.blockSize = this.options.blockSize;\n    this.cols = Math.ceil(this.app.canvas.width / this.blockSize);\n    this.rows = Math.ceil(this.app.canvas.height / this.blockSize); // for pathfindig\n\n    this.tilesInBlock = this.options.tilesInBlock;\n    this.tileSize = this.blockSize / this.tilesInBlock; // this.tileGraphics = new PIXI.Graphics();\n\n    this.tiles = []; // root\n\n    this.tileRows = this.rows * this.tilesInBlock;\n    this.tileCols = this.cols * this.tilesInBlock;\n    this.root = Math.floor(this.tileCols / 2) + this.tileCols * Math.floor(this.tileRows / 2); // arrays of elements\n\n    this.points = [];\n    this.horizontalWalls = [];\n    this.verticalWalls = []; // colors\n\n    this.wallColor = this.options.wallColor;\n    this.colorAmp = this.options.colorAmp; // direction\n\n    this.rootMoving = false;\n    this.rootDir = null; // frames\n\n    this.frameCount = 0; // start function\n\n    this.init();\n  }\n\n  Object(_Users_olivermulari_Documents_dev_hobbies_viewer_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Grid, [{\n    key: \"init\",\n    value: function init() {\n      this.createPoints();\n      this.createWalls();\n      Object(_mazegenerator__WEBPACK_IMPORTED_MODULE_4__[\"generateMaze\"])(this); // also draws them\n\n      this.createTiles(); // walls on top of tiles\n\n      if (this.options.wallColor) {\n        this.showWalls();\n      } // inits event listener\n\n\n      if (!this.rootMoving) {\n        this.updatePointerPos();\n      }\n    }\n  }, {\n    key: \"createPoints\",\n    value: function createPoints() {\n      var offX = (this.app.canvas.width - this.cols * this.blockSize) / 2 - this.app.canvas.width / 2;\n      var offY = (this.app.canvas.height - this.rows * this.blockSize) / 2 - this.app.canvas.height / 2;\n\n      for (var y = 0; y <= this.rows; y++) {\n        for (var x = 0; x <= this.cols; x++) {\n          var point = new valo_js__WEBPACK_IMPORTED_MODULE_2__[\"VALO2D\"].Vec2(x * this.blockSize + offX, y * this.blockSize + offY);\n          this.points.push(point);\n        }\n      }\n    }\n  }, {\n    key: \"createWalls\",\n    value: function createWalls() {\n      // vertical\n      for (var y = 0; y < this.rows; y++) {\n        var vRow = [];\n\n        for (var x = 0; x <= this.cols; x++) {\n          vRow.push(true);\n        }\n\n        this.verticalWalls.push(vRow);\n      } // horizontal\n\n\n      for (var _y = 0; _y <= this.rows; _y++) {\n        var hRow = [];\n\n        for (var _x = 0; _x < this.cols; _x++) {\n          hRow.push(true);\n        }\n\n        this.horizontalWalls.push(hRow);\n      }\n    }\n  }, {\n    key: \"breakWall\",\n    value: function breakWall(row, column, dir) {\n      switch (dir) {\n        case \"Down\":\n          if (row == this.rows) {\n            console.log(\"Can't break bottom walls\");\n          } else if (!this.horizontalWalls[row + 1][column]) {\n            console.log(\"Can't break walls that are already broken\");\n          } else {\n            this.horizontalWalls[row + 1][column] = false;\n          }\n\n          break;\n\n        case \"Up\":\n          if (row == 0) {\n            console.log(\"Can't break top walls\");\n          } else if (!this.horizontalWalls[row][column]) {\n            console.log(\"Can't break walls that are already broken\");\n          } else {\n            this.horizontalWalls[row][column] = false;\n          }\n\n          break;\n\n        case \"Left\":\n          if (column == 0) {\n            console.log(\"Can't break leftmost walls\");\n          } else if (!this.verticalWalls[row][column]) {\n            console.log(\"Can't break walls that are already broken\");\n          } else {\n            this.verticalWalls[row][column] = false;\n          }\n\n          break;\n\n        case \"Right\":\n          if (column == this.cols) {\n            console.log(\"Can't break rightmost walls\");\n          } else if (!this.verticalWalls[row][column + 1]) {\n            console.log(\"Can't break walls that are already broken\");\n          } else {\n            this.verticalWalls[row][column + 1] = false;\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"hasWall\",\n    value: function hasWall(row, column, dir) {\n      switch (dir) {\n        case \"Down\":\n          return this.horizontalWalls[row + 1][column];\n\n        case \"Up\":\n          return this.horizontalWalls[row][column];\n\n        case \"Left\":\n          return this.verticalWalls[row][column];\n\n        case \"Right\":\n          return this.verticalWalls[row][column + 1];\n      }\n    }\n  }, {\n    key: \"showWalls\",\n    value: function showWalls() {\n      var positions = [];\n\n      for (var y = 0; y <= this.rows; y++) {\n        for (var x = 0; x <= this.cols; x++) {\n          // get current point\n          var point = this.points[x + y * (this.cols + 1)]; // test horizontal walls\n\n          if (this.horizontalWalls[y][x]) {\n            positions.push(point.x, -point.y, point.x + this.blockSize, -point.y);\n          } // test verical walls\n\n\n          if (this.verticalWalls[y] && this.verticalWalls[y][x]) {\n            positions.push(point.x, -point.y, point.x, -point.y + this.blockSize);\n          }\n        }\n      }\n\n      var color = new valo_js__WEBPACK_IMPORTED_MODULE_2__[\"VALO2D\"].Color(this.options.wallColor[0], this.options.wallColor[1], this.options.wallColor[2], this.options.wallColor[3]);\n      this.app.renderer.drawLines(positions, color);\n    }\n  }, {\n    key: \"createTiles\",\n    value: function createTiles() {\n      var tileRows = this.rows * this.tilesInBlock;\n      var tileCols = this.cols * this.tilesInBlock;\n      var offX = (this.app.canvas.width - this.cols * this.blockSize) / 2;\n      var offY = (this.app.canvas.height - this.rows * this.blockSize) / 2;\n\n      for (var y = 0; y < tileRows; y++) {\n        for (var x = 0; x < tileCols; x++) {\n          var tile = new valo_js__WEBPACK_IMPORTED_MODULE_2__[\"VALO2D\"].Vec2(x * this.tileSize + offX - this.app.canvas.width / 2 + this.blockSize / 2, this.app.canvas.height - y * this.tileSize + offY - this.app.canvas.height / 2);\n          tile.shape = new valo_js__WEBPACK_IMPORTED_MODULE_2__[\"VALO2D\"].Rectangle(this.app.scene, {\n            width: this.tileSize,\n            height: this.tileSize\n          });\n          tile.shape.position = tile;\n          tile.shape.color.r = 0;\n          tile.shape.color.g = 1.0;\n          tile.shape.color.b = 1.0;\n          this.app.scene.addShape(tile.shape);\n          this.tiles.push(tile);\n        }\n      }\n\n      this.updateTiles();\n    }\n  }, {\n    key: \"updateTiles\",\n    value: function updateTiles() {\n      var _this = this;\n\n      var dist = Object(_pathfinding__WEBPACK_IMPORTED_MODULE_5__[\"mapDistances\"])(this, this.root);\n      this.tiles.forEach(function (tile, i) {\n        var c = dist[i] * _this.colorAmp;\n        tile.shape.color.a = (255 - c) / 255;\n      });\n    }\n  }, {\n    key: \"updatePointerPos\",\n    value: function updatePointerPos() {\n      var _this2 = this;\n\n      var offX = (this.app.canvas.width - this.cols * this.blockSize) / 2;\n      var offY = (this.app.canvas.height - this.rows * this.blockSize) / 2;\n\n      document.onpointermove = function (e) {\n        var x = e.clientX - offX;\n        var y = e.clientY - offY;\n        var tileX = (x - x % _this2.tileSize) / _this2.tileSize;\n        var tileY = (y - y % _this2.tileSize) / _this2.tileSize;\n\n        if (x >= 0 && y >= 0 && tileX < _this2.cols * _this2.tilesInBlock && tileY < _this2.rows * _this2.tilesInBlock) {\n          _this2.root = Math.floor(tileX + _this2.cols * _this2.tilesInBlock * tileY);\n        }\n      };\n    }\n  }, {\n    key: \"updateRootDir\",\n    value: function updateRootDir(delta) {\n      var _this3 = this;\n\n      if (Math.floor(delta * this.frameCount) % 1 == 0) {\n        var c = this.cols;\n        var x = this.root % c;\n        var y = (this.root - x) / c;\n        var arr = [[y, x - 1, \"Left\"], [y + 1, x, \"Down\"], [y - 1, x, \"Up\"], [y, x + 1, \"Right\"]];\n        var legal = arr.filter(function (d) {\n          return !_this3.hasWall(y, x, d[2]);\n        });\n        var idx = legal.map(function (x) {\n          return x[2];\n        }).indexOf(function (x) {\n          return x == _this3.rootDir;\n        });\n        var nextX = x;\n        var nextY = y;\n\n        if (idx != -1) {\n          // do not change direction\n          nextY = legal[idx][0];\n          nextX = legal[idx][1];\n        } else if (legal.length > 0) {\n          var i = Math.floor(Math.random() * legal.length);\n          this.rootDir = legal[i][2];\n          nextY = legal[i][0];\n          nextX = legal[i][1];\n        }\n\n        this.root = nextX + nextY * c;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (this.frameCount % 1 == 0) {\n        this.updateTiles();\n        this.showWalls();\n      }\n\n      if (this.rootMoving) {\n        this.updateRootDir(delta);\n      }\n\n      this.frameCount++;\n    }\n  }]);\n\n  return Grid;\n}();\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./maze/Grid.js\n");

/***/ })

})